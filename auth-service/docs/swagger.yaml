basePath: /api/auth
definitions:
  dto.AuthResponse:
    properties:
      email:
        description: Alamat email pengguna.
        example: john.doe@example.com
        type: string
      id:
        description: ID pengguna, hanya disertakan jika ada (saat Register).
        example: 1
        type: integer
      name:
        description: Nama pengguna, hanya disertakan jika ada (saat Register).
        example: John Doe
        type: string
      token:
        description: Token JWT, hanya disertakan jika ada (saat Login atau Register
          jika langsung login).
        example: eyJhbGciOiJIUzI1Ni...
        type: string
    type: object
  dto.ErrorResponse:
    properties:
      error:
        description: Pesan error yang menjelaskan masalah.
        example: Pesan kesalahan yang deskriptif
        type: string
      message:
        example: "401"
        type: string
      status_code:
        example: 401
        type: integer
    required:
    - message
    - status_code
    type: object
  dto.LoginRequest:
    properties:
      email:
        description: Alamat email pengguna. `required` dan `email`.
        example: john.doe@example.com
        type: string
      password:
        description: Kata sandi pengguna. `required`.
        example: password123
        type: string
    required:
    - email
    - password
    type: object
  dto.RegisterRequest:
    properties:
      email:
        example: john.doe@example.com
        type: string
      name:
        example: John Doe
        type: string
      password:
        example: password123
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  dto.RegisterResponse:
    properties:
      email:
        example: john.doe@example.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: John Doe
        type: string
    required:
    - email
    - id
    - name
    type: object
  dto.TemplateLoginResponse:
    properties:
      data:
        $ref: '#/definitions/dto.AuthResponse'
      message:
        example: Create user success
        type: string
      status_code:
        example: 201
        type: integer
    required:
    - message
    - status_code
    type: object
  dto.TemplateRegisterResponse:
    properties:
      data:
        $ref: '#/definitions/dto.RegisterResponse'
      message:
        example: Create user success
        type: string
      status_code:
        example: 201
        type: integer
    required:
    - message
    - status_code
    type: object
host: localhost:8082
info:
  contact:
    email: dev@booktopia.com
    name: Tim Developer Booktopia
  description: Ini adalah service autentikasi untuk Booktopia.
  termsOfService: http://swagger.io/terms/
  title: Booktopia Auth Service API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login pengguna dan mengembalikan token
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TemplateLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Login user
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Membuat akun pengguna baru
      parameters:
      - description: Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.TemplateRegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Register user
      tags:
      - Auth
swagger: "2.0"
