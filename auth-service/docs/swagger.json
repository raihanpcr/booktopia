{
    "swagger": "2.0",
    "info": {
        "description": "Ini adalah service autentikasi untuk Booktopia.",
        "title": "Booktopia Auth Service API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Tim Developer Booktopia",
            "email": "dev@booktopia.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8082",
    "basePath": "/api/auth",
    "paths": {
        "/login": {
            "post": {
                "description": "Login pengguna dan mengembalikan token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TemplateLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Membuat akun pengguna baru",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "Register Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.TemplateRegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AuthResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Alamat email pengguna.",
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "id": {
                    "description": "ID pengguna, hanya disertakan jika ada (saat Register).",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Nama pengguna, hanya disertakan jika ada (saat Register).",
                    "type": "string",
                    "example": "John Doe"
                },
                "token": {
                    "description": "Token JWT, hanya disertakan jika ada (saat Login atau Register jika langsung login).",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1Ni..."
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "required": [
                "message",
                "status_code"
            ],
            "properties": {
                "error": {
                    "description": "Pesan error yang menjelaskan masalah.",
                    "type": "string",
                    "example": "Pesan kesalahan yang deskriptif"
                },
                "message": {
                    "type": "string",
                    "example": "401"
                },
                "status_code": {
                    "type": "integer",
                    "example": 401
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "Alamat email pengguna. `required` dan `email`.",
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "password": {
                    "description": "Kata sandi pengguna. `required`.",
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "dto.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "password123"
                }
            }
        },
        "dto.RegisterResponse": {
            "type": "object",
            "required": [
                "email",
                "id",
                "name"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                }
            }
        },
        "dto.TemplateLoginResponse": {
            "type": "object",
            "required": [
                "message",
                "status_code"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.AuthResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Create user success"
                },
                "status_code": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dto.TemplateRegisterResponse": {
            "type": "object",
            "required": [
                "message",
                "status_code"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.RegisterResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Create user success"
                },
                "status_code": {
                    "type": "integer",
                    "example": 201
                }
            }
        }
    }
}